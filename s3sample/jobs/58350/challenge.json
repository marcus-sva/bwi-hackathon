{
  "applicant_id": 2,
  "job_id": 2,
  "Technische Fragen": [
    {
      "Frage": "Was sind die wichtigsten Unterschiede zwischen React und Angular?",
      "Bewertung": "Die Antwort sollte die unterschiedlichen Ansätze von React als Bibliothek und Angular als Framework beschreiben, einschließlich Aspekte wie Flexibilität, Struktur und Zusatzfunktionen wie Dependency Injection."
    },
    {
      "Frage": "Wie wird in React der Zustand einer Anwendung verwaltet?",
      "Bewertung": "Die Antwort sollte den Unterschied zwischen lokalen Zustandsverwaltungs-Methoden wie `useState` und globalen Ansätzen wie Context API oder Redux erklären."
    },
    {
      "Frage": "Was ist der Unterschied zwischen serverseitigem Rendering (SSR) und clientseitigem Rendering (CSR)?",
      "Bewertung": "Die Antwort sollte die Funktionsweise, Vor- und Nachteile von SSR und CSR vergleichen, insbesondere in Bezug auf Performance und Benutzererfahrung."
    },
    {
      "Frage": "Beschreiben Sie die grundlegenden Eigenschaften von CSS-in-JS-Lösungen wie styled-components.",
      "Bewertung": "Die Antwort sollte die Vorteile und Arbeitsweise von CSS-in-JS erklären, z. B. dynamische Styles basierend auf Props und die Isolierung von Stilen."
    }
  ],
  "Persönliche Eignung": [
    {
      "Frage": "Wie arbeiten Sie in einem Team, das an einer großen Frontend-Anwendung arbeitet?",
      "Bewertung": "Die Antwort sollte aufzeigen, wie der Bewerber Aufgaben aufteilt, Tools wie Jira oder Trello nutzt und Konsistenz durch Coding-Standards und Code-Reviews sicherstellt."
    },
    {
      "Frage": "Wie gehen Sie mit Meinungsverschiedenheiten zu technischen Entscheidungen im Team um?",
      "Bewertung": "Die Antwort sollte Strategien zur Konfliktlösung und Entscheidungsfindung basierend auf Daten und externen Quellen beschreiben."
    },
    {
      "Frage": "Wie priorisieren Sie Aufgaben in einem Projekt mit vielen Abhängigkeiten?",
      "Bewertung": "Die Antwort sollte Ansätze zur Priorisierung von Aufgaben basierend auf kritischen Pfaden und Abhängigkeiten sowie der Wirkung und Komplexität von Tasks erläutern."
    },
    {
      "Frage": "Wie gehen Sie mit Herausforderungen in einer Frontend-Architektur um?",
      "Bewertung": "Die Antwort sollte zeigen, wie der Bewerber Herausforderungen analysiert, skalierbare und modulare Lösungen findet und Feedback vom Team einholt."
    }
  ],
  "Codingaufgabe": [
    {
      "Aufgabe": "Erstellen Sie eine einfache React-Anwendung zur Verwaltung von Aufgaben. Die Anwendung sollte folgende Funktionen bieten: Hinzufügen, Löschen und Bearbeiten von Aufgaben. Die Daten sollten lokal gespeichert werden.",
      "Bewertung": "Die Lösung sollte React Hooks wie `useState` und `useEffect` verwenden, eine saubere Benutzeroberfläche bieten und die lokale Speicherung der Daten sicherstellen."
    }
  ],
  "Zusammenfassung": "Der Bewerber sollte fundiertes Wissen in Frontend-Technologien wie React und moderne Entwicklungsansätze demonstrieren. Die Antworten sollten präzise, technisch korrekt und für die Praxis relevant sein.",
  "Empfehlung": "Die Antworten und die Codingaufgabe sollten die Eignung des Bewerbers für die Rolle als Frontend Developer reflektieren, insbesondere durch die Kombination aus technischer Expertise und Teamorientierung."
}
