{
  "applicant_id": 1,
  "job_id": 1,
    "Technische Fragen": [
      {
        "Frage": "Was ist der Unterschied zwischen einer Retro und einem Post Mortem?",
        "Bewertungsmaßstab": "Korrekte Beschreibung der Unterschiede zwischen Retro und Post Mortem"
      },
      {
        "Frage": "Erklären Sie, warum Sie die Programmiersprache Python für diese Aufgabe gewählt haben.",
        "Bewertungsmaßstab": "Plausibilität und Rechtfertigung der Programmiersprachewahl"
      },
      {
        "Frage": "Was sind die Vorteile einer Datenbanken-Verwendung im KVInfoSysBund?",
        "Bewertungsmaßstab": "Korrekte und umfassende Darstellung der Vorteile einer Datenbanken-Verwendung"
      },
      {
        "Frage": "Beschreiben Sie die grundlegenden Eigenschaften eines Points of Interest (POI).",
        "Bewertungsmaßstab": "Korrekte und umfassende Darstellung der POI-Eigenschaften"
      }
    ],
    "Persönliche Eignung": [
      {
        "Frage": "Wie würden Sie in einem Team eine komplexe Aufgabe unternehmen? Beschreiben Sie Ihre Arbeitsabläufe und Ihre Kommunikationsstrategien.",
        "Bewertungsmaßstab": "Klare und überzeugende Beschreibung der Arbeitsabläufe und Kommunikationsstrategien"
      },
      {
        "Frage": "Wie würden Sie mit einem Kollegen oder einer Kollegin an einem Projekt arbeiten, wenn Sie unterschiedliche Ansichten oder Meinungen haben?",
        "Bewertungsmaßstab": "Klare und konstruktive Beschreibung der Kommunikationsstrategie und der Lösungsmöglichkeiten"
      },
      {
        "Frage": "Beschreiben Sie Ihre Erfahrungen mit Zeitmanagement und Priorisierung in einem Projekt. Wie würden Sie in einem Projekt priorisieren?",
        "Bewertungsmaßstab": "Korrekte und umfassende Darstellung der Erfahrungen mit Zeitmanagement und Priorisierung"
      },
      {
        "Frage": "Wie würden Sie mit einem Problem oder einer Herausforderung in einem Projekt umgehen? Beschreiben Sie Ihre Denkprozesse und Ihre Lösungsmöglichkeiten.",
        "Bewertungsmaßstab": "Klare und überzeugende Beschreibung der Denkprozesse und der Lösungsmöglichkeiten"
      }
    ],
    "Codingaufgabe": [
      {
        "Aufgabe": "Entwickeln Sie eine API für die Speicherung und Abfrage von Points of Interest (POI). Die API sollte die folgenden Endpunkte enthalten:\n*   GET /pois: Liest alle POI-Daten aus der Datenbank und gibt sie zurück.\n*   POST /pois: Fügt ein neues POI hinzu.\n*   GET /pois/:id: Liest die POI-Daten eines spezifischen POI aus der Datenbank und gibt sie zurück.\n*   PUT /pois/:id: Aktualisiert die POI-Daten eines spezifischen POI in der Datenbank.\n*   DELETE /pois/:id: Löscht ein POI aus der Datenbank.\n\nDie API sollte die folgenden Felder enthalten:\n*   id (Primärschlüssel): ein eindeutiger Schlüssel für das POI.\n*   name: der Name des POI.\n*   geoCoordinate: die Geo-Koordinate des POI.\n*   type: die Art des POI.\n*   address: die Adresse des POI.\n*   hospital: die Anzahl der Betten auf der Intensivstation und der Pflegestation des POI.\n*   pier: die Anzahl der Piers mit Name und Geo-Koordinate des POI.\n*   runway: die Himmelsrichtung und Länge der Landebahn des POI.\n\nSie können eine Datenbank verwenden, die Sie selbst erstellen oder eine bereits existierende verwenden. Die Implementierung sollte in Python sein. Sie sollten die Benachrichtigungen bei Datenänderungen senden, indem Sie die `requests`-Bibliothek verwenden. Benachrichtigungen werden bei folgenden Ereignissen gesendet:\n*   Aktualisierung eines POI.\n*   Löschen eines POI.\n*   Hinzufügen eines neuen POI."
      }
    ]
  }
  